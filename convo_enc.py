# Encrypted By Princ Inside
 # Github : https://github.com/PrinceTricker02/KARAN_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))